#!/bin/bash

# check for help option
if [ "$1" = "--help" -o "$1" = "-h" -o "$1" = "-?" ]; then
  echo
  echo "Usage: `basename $0` [files]"
  echo
  echo "- The fixstyle tool formats the layout of C++ and python code."
  echo "  It helps developers to achieve a common style of all Belle II software."
  echo "- By default it checks all C++ and python files in the current directory and"
  echo "  its subfolders recursively."
  echo "- Individual files can be checked explicitly by giving them as argument."
  echo
  exit 0
fi

# check astyle and its version
which astyle &> /dev/null
if [ $? != 0 ]; then
  echo "astyle tool not found. Execute the install.sh script in the ${BELLE2_TOOLS} directory." 1>&2
  exit 1
fi
VERSION=`astyle -V 2>&1`
if [ "${VERSION}" != "Artistic Style Version 1.23" ]; then
  echo "Wrong version of astyle. Execute the install.sh script in the ${BELLE2_TOOLS} directory." 1>&2
  exit 1
fi

# astyle command
ASTYLE="astyle \
--indent=spaces=2 \
--convert-tabs \
--brackets=stroustrup \
--indent-switches \
--indent-namespaces \
--indent-preprocessor \
--max-instatement-indent=60 \
--min-conditional-indent=0 \
--pad-oper \
--unpad-paren \
--keep-one-line-statements \
--keep-one-line-blocks \
--suffix=none \
--formatted"

# set tools directory if unset
BELLE2_TOOLS=${BELLE2_TOOLS:-`dirname $0`}

# define functions for python code formatting
function PythonTidy ()
{
  TMP=`mktemp`
  ${BELLE2_TOOLS}/PythonTidy.py $1 $TMP
  if [ "`diff $1 $TMP | wc -l`" != "0" ]; then
    ${BELLE2_TOOLS}/PythonTidy.py $TMP $1
    echo "formatted $1"
  fi
  rm -f $TMP
}

# fix all C++ and python code below the current directory if no arguments are given
if [ $# -lt 1 ]; then
  ${ASTYLE} --recursive *.{h,cc}
  for i in `find . -name \\*.py`; do
    PythonTidy $i
  done

else
  for i in $*; do
    if [ `echo $i| grep ".py$"` ]; then
      PythonTidy $i
    elif [ `echo $i| grep ".h$\|.cc$"` ]; then
      ${ASTYLE} $i
    else
      echo "File of unknown type not formatted: $i"
    fi
  done
fi

