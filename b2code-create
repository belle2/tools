#!/bin/bash

help() {
cat << EOF

      Usage: `basename $0` [--light] directory

  This command creates a local directory with the given name
  as basis for a working copy of the Belle II software.
  It also prepares the build system.

  --light
     Check out only the packages of a light release.

EOF
}

# comparison of versions
version_greater_equal()
{
  test "$(echo -e "$1\n$2" | sort -t. -k 1,1n -k 2,2n -k 3,3n -k 4,4n | tail -n 1)" = "$1"
}

# check for help option
if [ "$1" = "--help" -o "$1" = "-h" -o "$1" = "-?" -o "$1" = "--documentation" ]; then
  help
  exit 0
fi

# check for light option
LIGHT=0
if [ "$1" = "--light" ]; then
  LIGHT=1
  shift
fi

# check number of arguments
if [ $# -ne 1 ]; then
  echo "Usage: `basename $0` [--light] directory" 1>&2
  if [ $# -eq 2 ]; then
    echo "The creation of central + local releases is not supprted any more."
  fi
  exit 1
fi

# check remote git access
git ls-remote ${BELLE2_SOFTWARE_REPOSITORY} main > /dev/null
if [ "$?" != "0" ]; then
  echo "Error: Could not access the remote git repository." 1>&2
  exit 1
fi

# read arguments
DIR=$1

# create release directory and write release version to .release
if [ -d ${DIR} ]; then
  echo "Error: The directory ${DIR} already exists." 1>&2
  exit 1
fi

# clone the repository and checkout site-scons
git clone --no-checkout ${BELLE2_SOFTWARE_REPOSITORY} ${DIR}
cd ${DIR}
git config branch.main.rebase true
GIT_VERSION=$(git --version | awk '{print $3}')
if version_greater_equal ${GIT_VERSION} 1.7.4 ; then
  git config core.sparsecheckout true
else
  echo "Warning: Because your git version (${GIT_VERSION}) is older than 1.7.4 the support of sparse checkouts is disabled."
  echo "=> When you have set up a git version >= 1.7.4, e.g. from the externals development version, you can re-enable it by executing 'git config core.sparsecheckout true' in your local release directory."
fi
if [ "${LIGHT}" == "1" ]; then
  echo "/.light" >> .git/info/sparse-checkout
  git checkout main
  rm -f .git/info/sparse-checkout
  ln -s ${PWD}/.light .git/info/sparse-checkout
else
  echo "/*" >> .git/info/sparse-checkout
  for PACKAGE in ${BELLE2_EXCLUDE_PACKAGES}; do
    echo "!/${PACKAGE}/" >> .git/info/sparse-checkout
  done
fi
git checkout main

echo head > .release
ln -s site_scons/SConstruct .

# install hooks
rm -rf .git/hooks
ln -sf ${BELLE2_TOOLS}/hooks .git/hooks

# inform user about successful completion
echo "New local directory created for head version: ${DIR}"
echo "-> change to the new directory and set up the environment: cd ${DIR}; b2setup"
