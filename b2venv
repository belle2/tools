#!/bin/bash

# This script is inspired by the work of Matthew Feickert (https://github.com/matthewfeickert)
# and his 'cvmfs-venv' project. It automates the use of Python virtual environments 
# with libraries and packages sourced from CVMFS, ensuring that software dependencies 
# are maintained and shared across distributed environments.

# Check if a conda environment is active
if [[ -n "$CONDA_DEFAULT_ENV" ]]; then
    echo "A conda environment ($CONDA_DEFAULT_ENV) is active. Please deactivate your conda environment."
    exit 1
fi

_help_options () {
    cat <<EOF
Usage: b2venv [-n|--name <virtual environment name>] [-t|--tools-dir] [<basf2 release>]

Options:
 -h --help          Print this help message
 -n --name          Specify the name of the virtual environment (default: "venv")
EOF

  return 0
}

# Default values
_venv_name="venv"

# CLI API
unset _return_break
while [ $# -gt 0 ]; do
    case "${1}" in
        -h|--help)
            _help_options
            exit 0
            ;;
        -n|--name)
            _venv_name="${2}"
            shift 2
            ;;
        --)
            shift
            break
            ;;
        *)
            if [[ "${1}" != -* ]]; then
                if [ -z "$_basf2_release" ]; then
                    _basf2_release="${1}"
                    shift
                else
                    echo "ERROR: Unrecognized argument '${1}'"
                    exit 1
                fi
            else
                echo "ERROR: Invalid option '${1}'"
                exit 1
            fi
            ;;
    esac
done

# Check if basf2 release is provided
if [ -z "${_basf2_release}" ]; then
    echo "ERROR: basf2 release must be provided as a non-option argument"
    exit 1
fi

# Check if the venv directory already exists
if [ -d "${_venv_name}" ]; then
    echo "ERROR: the directory ${_venv_name=} already exists"
    exit 1
fi

echo "Setting up virtual environment in directory ${_venv_name=} for release ${_basf2_release}"

# Make sure that only the externals python is used
_setup_command="source $(dirname "$(realpath "$0")")/b2setup ${_basf2_release}"
eval "${_setup_command}" &> /dev/null
python3 -m venv --system-site-packages "${_venv_name}"
_venv_full_path="$(readlink -f ${_venv_name})"

sed -iz "s;deactivate nondestructive;deactivate nondestructive\n\n# setup basf2\n${_setup_command}\nexport PIP_PREFIX=\"${_venv_full_path}\";" "${_venv_name}/bin/activate"
