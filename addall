#!/bin/bash

# check for help option
if [ "$1" = "--help" -o "$1" = "-h" -o "$1" = "-?" ]; then
  echo
  echo "Usage: `basename $0`"
  echo
  echo "- This command adds the source code of all packages from the code"
  echo "  repository to the local release directory."
  echo "  It has to be called in the local release directory."
  echo
  exit 0
fi

# check number of arguments
if [ $# -ne 0 ]; then
  echo "Usage: `basename $0`" 1>&2
  exit 1
fi
if [ ! -f .release ]; then
  echo "Error: Not in a release directory." 1>&2
  exit 1
fi

# update sparse-checkout file
TMP=`mktemp /tmp/belle2_tmp.XXXX`
ALL=0
EXCLUDES=";"
INCLUDES=";"
while read -r LINE; do
  if [ "${LINE}" == "*" ]; then
    ALL=1
  elif [ `echo ${LINE} | cut -c 1` == "!" ]; then
    EXCLUDES="${EXCLUDES}"`echo ${LINE} | cut -c 3-`";"
  else
    INCLUDES="${INCLUDES}"`echo ${LINE} | cut -c 2-`";"
  fi
done < .git/info/sparse-checkout
echo "*" > .git/info/sparse-checkout
for EXTRA_EXCLUDE in ".externals" "site_scons"; do
  if [[ ${EXCLUDES} =~ ";${EXTRA_EXCLUDE};" ]]; then
    echo "!/${EXTRA_EXCLUDE}" >> .git/info/sparse-checkout
  fi
done
for PACKAGE in ${BELLE2_EXCLUDE_PACKAGES}; do
  if [ ${ALL} == 1 ]; then
    if [[ ${EXCLUDES} =~ ";${PACKAGE};" ]]; then
      echo "!/${PACKAGE}" >> .git/info/sparse-checkout
    fi
  else
    if !([[ ${INCLUDES} =~ ";${PACKAGE};" ]] ); then
      echo "!/${PACKAGE}" >> .git/info/sparse-checkout
    fi
  fi
done

# check out all packages
git checkout
