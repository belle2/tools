#!/bin/bash

help() {
cat << EOF

      Usage: `basename $0` [-f]

  This command deletes all built includes, object files, libraries, modules,
  and executables of your current local release.  The prompt for confirmation
  can be disabled with the -f option.

  -f
     Don't ask for confirmation

EOF
}

# check for documentation option (help + sphinx)
if [ "$1" = "--documentation" ]; then
cat << EOF

.. describe:: `basename $0`

  ::
EOF
  help
  exit 0
fi

# check for help option
if [ "$1" = "--help" -o "$1" = "-h" -o "$1" = "-?" ]; then
  help
  exit 0
fi

# check whether a release is set up
if [ -z "${BELLE2_LOCAL_DIR}" ]; then
  echo "Error: no local release is set up."
  exit 1
fi

# ask for confirmation, unless -f option is given
if [ "$1" != "-f" ]; then
  read -r -n 1 -p "Delete all built files at ${BELLE2_LOCAL_DIR}? [y/N] " DECISION
  echo
  if [ "${DECISION}" != "y" ]; then
    exit 0
  fi
fi

# delete the built local release files and directories
echo "Cleaning ${BELLE2_LOCAL_DIR:?}/include"
rm -rf "${BELLE2_LOCAL_DIR:?}/include"
echo "Cleaning ${BELLE2_LOCAL_DIR:?}/build/${BELLE2_SUBDIR}"
rm -rf "${BELLE2_LOCAL_DIR:?}/build/${BELLE2_SUBDIR?}"
echo "Cleaning ${BELLE2_LOCAL_DIR:?}/lib/${BELLE2_SUBDIR:?}"
rm -rf "${BELLE2_LOCAL_DIR:?}/lib/${BELLE2_SUBDIR:?}"
echo "Cleaning ${BELLE2_LOCAL_DIR:?}/bin/${BELLE2_SUBDIR:?}"
rm -rf "${BELLE2_LOCAL_DIR:?}/bin/${BELLE2_SUBDIR:?}"
echo "Cleaning ${BELLE2_LOCAL_DIR:?}/modules/${BELLE2_SUBDIR:?}"
rm -rf "${BELLE2_LOCAL_DIR:?}/modules/${BELLE2_SUBDIR:?}"
