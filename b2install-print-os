#!/bin/bash

help() {
cat << EOF

      Usage: `basename $0`

  This command determines the operating system name and version and prints them
  in a form that is used to identify binary version of the Belle II Software.

EOF
}

# check for help option
if [ "$1" = "--help" -o "$1" = "-h" -o "$1" = "-?" ]; then
  help
  exit 0
fi

OS_RELEASE_ID="<unknown>"
OS_RELEASE_ID_LIKE="<unknown>"
OS_RELEASE_VERSION="<unknown>"
UBUNTU_CODENAME="<none>"

# If /etc/os-release is present, read system identifier from it
if [ -f /etc/os-release ]; then
  OS_RELEASE_ID=`(source /etc/os-release && echo $ID)`
  OS_RELEASE_ID_LIKE=`(source /etc/os-release && echo $ID_LIKE)`
  if [ "${OS_RELEASE_ID}" = "centos" ] || [ "${OS_RELEASE_ID}" = "rhel" ]; then
    OS_RELEASE_ID="el"
  elif [ "${OS_RELEASE_ID}" = "scientific" ]; then
    OS_RELEASE_ID="el"
  elif [ "${OS_RELEASE_ID}" = "rocky" ] || [ "${OS_RELEASE_ID}" = "almalinux" ]; then
    OS_RELEASE_ID="el"
  elif [[ $OS_RELEASE_ID_LIKE = *ubuntu* ]]; then
    OS_RELEASE_ID="ubuntu"
    UBUNTU_CODENAME=`(source /etc/os-release && echo $UBUNTU_CODENAME)`
  fi
  OS_RELEASE_VERSION=`(source /etc/os-release && echo $VERSION_ID | sed 's/\.//g')`
  if [ "${OS_RELEASE_ID}" = "el" ]; then
    OS_RELEASE_VERSION=`(source /etc/os-release && echo $VERSION_ID | cut -c 1)`
  elif [ "${UBUNTU_CODENAME}" = "bionic" ]; then
    OS_RELEASE_VERSION=1804
  elif [ "${UBUNTU_CODENAME}" = "xenial" ]; then
    OS_RELEASE_VERSION=1604
  fi

# Else if /etc/redhat-release is present, assume SL and read version number fron it
elif [ -f /etc/redhat-release ]; then
  OS_RELEASE_ID="sl"
  OS_RELEASE_VERSION=`(cat /etc/redhat-release | awk -F . '{print $1}' | awk '{print $NF}')`
fi

echo ${OS_RELEASE_ID} ${OS_RELEASE_VERSION}
