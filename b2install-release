#!/bin/bash
set -o pipefail

# This help function requires a parameter to allow adding sphinx syntax.
help() {
cat << EOF

      Usage: `basename $0` [--debug] [--binary] [version [system]]

  This command installs the given release or build version of basf2
  in the directory $1.
  If no version is given it lists the available versions.

  By default it tries to install the precompiled binary version for
  the current system. A binary version can be selected explicitly
  with the second argument.

  --debug
     With this option, debug information is shown

  --binary
     With this option, no compilation of the source will be attempted

EOF
}

# check for documentation option (help + sphinx)
if [ "$1" = "--documentation" ]; then
cat << EOF

.. describe:: `basename $0`

  ::
EOF
  help ":file:\`\$VO_BELLE2_SW_DIR/releases\`"
  exit 0
fi


# check for help option
if [ "$1" = "--help" -o "$1" = "-h" -o "$1" = "-?" ]; then
  help "\$VO_BELLE2_SW_DIR/releases"
  exit 0
fi

# make sure tar uses stdin
unset TAPE

# check for debug option
DEBUG_SELECTION="--anchored --exclude='*/Linux*/debug' --exclude='*/Linux*/*/.debug'"
if [ "$1" = "--debug" ]; then
  DEBUG_SELECTION=""
  shift
fi

# check for binary option
BINARY_ONLY="no"
if [ "$1" = "--binary" ]; then
  BINARY_ONLY="yes"
  shift
fi

# check number of arguments
if [ $# -gt 2 ]; then
  echo "Usage: `basename $0` [version [system]]" 1>&2
  exit 1
fi

# check for software tools setup
if [ -z "${BELLE2_SOFTWARE_REPOSITORY}" -o -z "${VO_BELLE2_SW_DIR}" ]; then
  echo "Belle II software environment is not set up." 1>&2
  echo "-> source b2setup" 1>&2
  exit 1
fi

# list available versions if no argument is given
if [ $# -eq 0 ]; then
  git ls-remote ${BELLE2_SOFTWARE_REPOSITORY} | grep "tags/" | grep "release-\|build-\|light-" | grep -v "\^{}$" | awk -F / '{print $NF}'
  exit 0
fi


# check whether the given version is already installed
VERSION=$1
DIR=${VO_BELLE2_SW_DIR}/releases/${VERSION}
if [ -d ${DIR} ]; then
  echo "Error: The basf2 version ${VERSION} is already installed at ${VO_BELLE2_SW_DIR}/releases." 1>&2
  exit 1
fi

# check whether the releases top directory exists and cd to it
if [ ! -d ${VO_BELLE2_SW_DIR}/releases ]; then
  echo "The basf2 releases top directory ${VO_BELLE2_SW_DIR}/releases does not exist."
  read -p "Would you like to create it (y/n)? " -n 1 REPLY 
  echo
  if [ "$REPLY" = "y" ]; then
    mkdir -p ${VO_BELLE2_SW_DIR}/releases
    if [ "$?" != 0 ]; then
      echo "Error: The creation of the directory ${VO_BELLE2_SW_DIR}/releases failed." 1>&2
      exit 1
    fi
  else
    exit 1
  fi
fi
cd ${VO_BELLE2_SW_DIR}/releases

# check whether we can write to the releases directory
if [ ! -w ${VO_BELLE2_SW_DIR}/releases ]; then
  echo "Error: No write permissions to the directory ${VO_BELLE2_SW_DIR}/releases." 1>&2
  exit 1
fi

# try the binary version
SYSTEM=`b2install-print-os | sed "s/ //g"`
if [ $# -gt 1 ]; then
  SYSTEM=$2
fi
if [ "${SYSTEM}" != "<unknown><unknown>" ]; then
  wget -O - --tries=3 ${BELLE2_DOWNLOAD}/releases/${VERSION}_${SYSTEM}.tgz | tar xz ${DEBUG_SELECTION}
  if [ "$?" = "0" ]; then
    exit 0
  elif [ "${BINARY_ONLY}" = "yes" ]; then
    exit 2
  fi
fi

# try the source version
wget -O - --tries=3 ${BELLE2_DOWNLOAD}/releases/${VERSION}_src.tgz | tar xz
if [ "$?" != "0" ]; then
  # check whether the given version is available in the git repository
  VERSION_EXISTS=`git ls-remote ${BELLE2_SOFTWARE_REPOSITORY} ${VERSION} | wc -l`
  if [ "${VERSION_EXISTS}" = "0" ]; then
    echo "Error: The basf2 version ${VERSION} does not exist." 1>&2
    exit 1
  fi
  git archive --format=tar.gz --prefix=${VERSION}/ --remote=${BELLE2_SOFTWARE_REPOSITORY} ${VERSION} | tar xzv
  if [ "$?" != 0 ]; then
    echo "Error: The download of ${VERSION} from the git repository failed." 1>&2
    exit 2
  fi
fi

# build basf2
cd ${VERSION}
echo head > .release
ln -s site_scons/SConstruct .
. ${BELLE2_TOOLS}/b2setup.sh ""
scons

if [ "$?" != 0 ]; then
  echo "Error: The compilation of basf2 failed." 1>&2
  exit 3
fi
