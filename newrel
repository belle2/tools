#!/bin/bash

# check for help option
if [ "$1" = "--help" -o "$1" = "-h" -o "$1" = "-?" ]; then
  echo
  echo "Usage: `basename $0` directory [release]"
  echo
  echo "- This command creates a local directory with the given name"
  echo "  as basis for a working copy of the Belle II software."
  echo "  It also prepares the build system."
  echo "- If the basis for the code development should be a particular release,"
  echo "  the version can be given as second argument."
  echo "- If no second argument is given, the latest version of the code"
  echo "  (head of git master) is taken."
  echo
  exit 0
fi

# check number of arguments
if [ $# -lt 1 -o $# -gt 2 ]; then
  echo "Usage: `basename $0` directory [release]" 1>&2
  exit 1
fi

# check remote git access
REPOSITORY=${BELLE2_REPOSITORY}/software.git
git ls-remote ${REPOSITORY} master > /dev/null
if [ "$?" != "0" ]; then
  echo "Error: Could not access the remote git repository." 1>&2
  exit 1
fi

# read arguments
DIR=$1
RELEASE=head
if [ $# -gt 1 ]; then
  RELEASE=$2
  git ls-remote --exit-code ${REPOSITORY} ${RELEASE} > /dev/null
  if [ "$?" != "0" ]; then
    echo "Error: The release ${RELEASE} does not exist." 1>&2
    exit 1
  fi
fi

# create release directory and write release version to .release
if [ -d ${DIR} ]; then
  echo "Error: The directory ${DIR} already exists." 1>&2
  exit 1
fi

# clone the repository and checkout site-scons
git clone --no-checkout --config pull.rebase=true --config core.sparsecheckout=true ${REPOSITORY} ${DIR}
cd ${DIR}
if [ "${RELEASE}" == "head" ]; then
  cat - >> .git/info/sparse-checkout <<EOF
*
!/daq
!/eutel
!/testbeam
!/topcaf
EOF
else
  echo >> .git/info/sparse-checkout
  ln -s ${VO_BELLE2_SW_DIR}/releases/${RELEASE}/.externals .
  ln -s ${VO_BELLE2_SW_DIR}/releases/${RELEASE}/site_scons .
fi
git checkout master
echo ${RELEASE} > .release
ln -s site_scons/SConstruct .

# inform user about successful completion
echo "New local directory created for ${RELEASE} release: ${DIR}"
echo "-> change to the new directory and set up the environment: cd ${DIR}; setuprel"