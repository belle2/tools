#!/usr/bin/env b2anypython
# -*- coding: utf-8 -*-

import sys, os
import textwrap
from versioning import supported_release
import argparse


def get_argument_parser():

    description = textwrap.dedent('''\n
This command changes the central release version for the currently set up
analysis. If no central release version is given as argument the recommended
release version is taken.
    ''')
    parser = argparse.ArgumentParser(prog='b2analysis-update',
                                     formatter_class=argparse.RawDescriptionHelpFormatter,
                                     description=description)
    parser.add_argument('release',
                        metavar='RELEASE',
                        type=str,
                        nargs='?',
                        help='A centrally produced release used instead of the recommended one')
    return parser


if __name__ == '__main__':

    args = get_argument_parser().parse_args()

    # get .analysis file and its content
    analysis = None
    for path in ['.', os.environ.get('BELLE2_ANALYSIS_DIR', '.')]:
        filename = os.path.join(path, '.analysis')
        if os.path.isfile(filename):
            analysis = filename
            break

    if analysis is None:
        sys.stderr.write('Error: No analysis directory found.\n')
        sys.exit(1)

    current_release = open(analysis).readline().strip()

    # if no release is given take the recommended one
    if args.release is None:
        release = supported_release(current_release)
    # if a release is given check whether it is supported
    else:
        supported = supported_release(args.release)
        if args.release != supported:
            print('Warning: %s is not supported, instead %s is recommended' % (args.release, supported))
        release = args.release

    # do the update if the release differs from the current one
    if release == current_release:
        print('The analysis is already set to %s. No update is done.' % release)
    else:
        print('Updating from analysis at %s from %s to %s.' % (os.path.dirname(analysis), current_release, release))
        print('Please make sure to run b2setup.')
        analysis_file = open(analysis, 'w')
        analysis_file.write(release + '\n')
        analysis_file.close()
        os.remove('site_scons')
        os.symlink(os.path.join(os.environ['VO_BELLE2_SW_DIR'], 'releases', release, 'site_scons'), 'site_scons')
