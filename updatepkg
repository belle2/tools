#!/bin/bash

# check for help option
if [ "$1" = "--help" -o "$1" = "-h" -o "$1" = "-?" ]; then
  echo
  echo "Usage: `basename $0` [\"release\"/\"head\"(=default)/tag]"
  echo
  echo "- This command updates the source code of a package to a selected version."
  echo "  It has to be called in the package directory of the local release."
  echo "  If files were modified locally, the changes will be merged."
  echo "- By default the source code is updated to the latest version (svn head)."
  echo "- If \"release\" is given as second argument, the source code is updated"
  echo "  to the version corresponding to the local release version."
  echo "- A particular tagged version of the package's source code can be obtained"
  echo "  by using the tag name as second argument."
  echo
  exit 0
fi

# check number of arguments
if [ $# -gt 1 ]; then
  echo "Usage: `basename $0` [\"release\"/\"head\"(=default)/tag]" 1>&2
  exit 1
fi

# determine package name
PACKAGE=`pwd | awk -F/ '{print $NF}'`
svn list ${BELLE2_REPOSITORY}/trunk/software/${PACKAGE} &> /dev/null
if [ "$?" != "0" ]; then
  echo "Error: Not in a package directory." 1>&2
  exit 1
fi

# read arguments
TAG=head
if [ $# -gt 0 ]; then
  TAG=$1
  if [ "${TAG}" != "head" -a "${TAG}" != "release" ]; then
    svn list ${BELLE2_REPOSITORY}/tags/software/${PACKAGE}/${TAG} &> /dev/null
    if [ "$?" != "0" ]; then
      echo "Error: The tag ${TAG} does not exist." 1>&2
      exit 1
    fi
  fi
fi

# update package
if [ "${TAG}" = "release" ]; then
  if [ ! -f ../.release ]; then
    echo "Error: Not in a release directory." 1>&2
    exit 1
  fi
  RELEASE=`cat ../.release`
  if [ "${RELEASE}" = "head" ]; then
    svn switch ${BELLE2_REPOSITORY}/trunk/software/${PACKAGE}
    if [ "$?" == "0" ]; then
      echo "Updated ${PACKAGE} to head version."
    fi
  else
    svn switch ${BELLE2_REPOSITORY}/releases/software/${RELEASE}/${PACKAGE}
    if [ "$?" == "0" ]; then
      echo "Updated ${PACKAGE} to release version."
    fi
  fi
elif [ "${TAG}" = "head" ]; then
  svn switch ${BELLE2_REPOSITORY}/trunk/software/${PACKAGE}
  if [ "$?" == "0" ]; then
    echo "Updated ${PACKAGE} to head version."
  fi
else
  svn switch ${BELLE2_REPOSITORY}/tags/software/${PACKAGE}/${TAG}
  if [ "$?" == "0" ]; then
    echo "Updated ${PACKAGE} to tag ${TAG}."
  fi
fi

